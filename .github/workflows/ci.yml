name: Build, archive previous latest, and push Docker image

on:
  push:
    branches: [ main ]

jobs:
  build-and-archive:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set TIMESTAMP env
        run: echo "TIMESTAMP=$(date -u +%Y%m%d-%H%M%S)" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Attempt to pull existing :latest (may fail on first run)
        id: pull_latest
        run: |
          IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/kubernetes-deploy:latest
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
          if docker pull "$IMAGE"; then
            echo "pulled=true" >> $GITHUB_ENV
          else
            echo "pulled=false" >> $GITHUB_ENV
          fi

      - name: Retag previous latest as old-TIMESTAMP (if pulled)
        if: env.pulled == 'true'
        run: |
          OLD_TAG=${{ secrets.DOCKERHUB_USERNAME }}/kubernetes-deploy:old-${TIMESTAMP}
          docker tag $IMAGE $OLD_TAG
          docker push $OLD_TAG
          echo "Retagged previous latest -> $OLD_TAG"

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push new image (latest + sha)
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Docker/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/kubernetes-deploy:latest

      - name: Trigger CD the pipeline
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: ${{ github.repository }}
          event-type: deploy
          client-payload: '{"image_tag": "${{ secrets.DOCKERHUB_USERNAME }}/kubernetes-deploy:latest"}'
